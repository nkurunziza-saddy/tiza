name: Build Desktop App

on:
  push:
    branches: [main, master]
    tags: ["v*"]
  pull_request:
    branches: [main, master]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            arch: "arm64"
            name: "macOS-arm64"
            target: "aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            arch: "x64"
            name: "macOS-x64"
            target: "x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
            arch: "x64"
            name: "Linux-x64"
            target: ""
          - platform: "windows-latest"
            args: ""
            arch: "x64"
            name: "Windows-x64"
            target: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./apps/desktop/src-tauri -> target"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build frontend
        working-directory: apps/desktop
        run: pnpm run build

      - name: Build the app
        working-directory: apps/desktop
        run: pnpm tauri build ${{ matrix.args }}

      - name: List build artifacts
        shell: bash
        run: |
          echo "Listing all files in target directory:"
          find apps/desktop/src-tauri/target -name "bundle" -type d 2>/dev/null || echo "No bundle directories found"
          find apps/desktop/src-tauri/target -type f \( -name "*.deb" -o -name "*.rpm" -o -name "*.AppImage" -o -name "*.dmg" -o -name "*.msi" -o -name "*.exe" -o -name "*.app" \) 2>/dev/null || echo "No bundle files found"

      - name: Upload development artifacts
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: tiza-${{ matrix.name }}
          path: |
            apps/desktop/src-tauri/target/release/bundle/**/*
            apps/desktop/src-tauri/target/*/release/bundle/**/*
          if-no-files-found: warn

      - name: Upload release assets (Tagged releases only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            apps/desktop/src-tauri/target/release/bundle/**/*
            apps/desktop/src-tauri/target/*/release/bundle/**/*
          draft: false
          prerelease: false
